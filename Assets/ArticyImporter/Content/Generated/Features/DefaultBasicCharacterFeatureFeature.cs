//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Articy.Unity;
using Articy.Unity.Interfaces;
using Articy.Villageofthenecrofarmer;
using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;


namespace Articy.Villageofthenecrofarmer.Features
{
    
    
    [Serializable()]
    public class DefaultBasicCharacterFeatureFeature : IArticyBaseObject, IPropertyProvider
    {
        
        [SerializeField()]
        private Single mAge;
        
        [SerializeField()]
        private ArticyValueArticyMultiLanguageString mSpecies = new ArticyValueArticyMultiLanguageString();
        
        [SerializeField()]
        private ArticyValueArticyMultiLanguageString mBornIn = new ArticyValueArticyMultiLanguageString();
        
        [SerializeField()]
        private Sex mSex = new Sex();
        
        [SerializeField()]
        private ArticyValueArticyMultiLanguageString mOccupation = new ArticyValueArticyMultiLanguageString();
        
        [SerializeField()]
        private ArticyValueArticyMultiLanguageString mAccent = new ArticyValueArticyMultiLanguageString();
        
        [SerializeField()]
        private ArticyValueArticyMultiLanguageString mPersonality = new ArticyValueArticyMultiLanguageString();
        
        [SerializeField()]
        private ArticyValueArticyMultiLanguageString mAppearance = new ArticyValueArticyMultiLanguageString();
        
        [SerializeField()]
        private UInt64 mOwnerId;
        
        [SerializeField()]
        private UInt32 mOwnerInstanceId;
        
        public Single Age
        {
            get
            {
                return mAge;
            }
            set
            {
                var oldValue = mAge;
                mAge = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "DefaultBasicCharacterFeature.Age", oldValue, mAge);
            }
        }
        
        public ArticyMultiLanguageString Species
        {
            get
            {
                return mSpecies.GetValue();
            }
            set
            {
                mSpecies.SetValue(value);
            }
        }
        
        public ArticyMultiLanguageString BornIn
        {
            get
            {
                return mBornIn.GetValue();
            }
            set
            {
                mBornIn.SetValue(value);
            }
        }
        
        public Sex Sex
        {
            get
            {
                return mSex;
            }
            set
            {
                var oldValue = mSex;
                mSex = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "DefaultBasicCharacterFeature.Sex", oldValue, mSex);
            }
        }
        
        public ArticyMultiLanguageString Occupation
        {
            get
            {
                return mOccupation.GetValue();
            }
            set
            {
                mOccupation.SetValue(value);
            }
        }
        
        public ArticyMultiLanguageString Accent
        {
            get
            {
                return mAccent.GetValue();
            }
            set
            {
                mAccent.SetValue(value);
            }
        }
        
        public ArticyMultiLanguageString Personality
        {
            get
            {
                return mPersonality.GetValue();
            }
            set
            {
                mPersonality.SetValue(value);
            }
        }
        
        public ArticyMultiLanguageString Appearance
        {
            get
            {
                return mAppearance.GetValue();
            }
            set
            {
                mAppearance.SetValue(value);
            }
        }
        
        public UInt64 OwnerId
        {
            get
            {
                return mOwnerId;
            }
            set
            {
                mOwnerId = value;
            }
        }
        
        public UInt32 OwnerInstanceId
        {
            get
            {
                return mOwnerInstanceId;
            }
            set
            {
                mOwnerInstanceId = value;
            }
        }
        
        private void CloneProperties(object aClone, Articy.Unity.ArticyObject aFirstClassParent)
        {
            Articy.Villageofthenecrofarmer.Features.DefaultBasicCharacterFeatureFeature newClone = ((Articy.Villageofthenecrofarmer.Features.DefaultBasicCharacterFeatureFeature)(aClone));
            newClone.Age = Age;
            if ((mSpecies != null))
            {
                newClone.mSpecies = ((ArticyValueArticyMultiLanguageString)(mSpecies.CloneObject(newClone, aFirstClassParent)));
            }
            if ((mBornIn != null))
            {
                newClone.mBornIn = ((ArticyValueArticyMultiLanguageString)(mBornIn.CloneObject(newClone, aFirstClassParent)));
            }
            newClone.Sex = Sex;
            if ((mOccupation != null))
            {
                newClone.mOccupation = ((ArticyValueArticyMultiLanguageString)(mOccupation.CloneObject(newClone, aFirstClassParent)));
            }
            if ((mAccent != null))
            {
                newClone.mAccent = ((ArticyValueArticyMultiLanguageString)(mAccent.CloneObject(newClone, aFirstClassParent)));
            }
            if ((mPersonality != null))
            {
                newClone.mPersonality = ((ArticyValueArticyMultiLanguageString)(mPersonality.CloneObject(newClone, aFirstClassParent)));
            }
            if ((mAppearance != null))
            {
                newClone.mAppearance = ((ArticyValueArticyMultiLanguageString)(mAppearance.CloneObject(newClone, aFirstClassParent)));
            }
            newClone.OwnerId = OwnerId;
        }
        
        public object CloneObject(object aParent, Articy.Unity.ArticyObject aFirstClassParent)
        {
            Articy.Villageofthenecrofarmer.Features.DefaultBasicCharacterFeatureFeature clone = new Articy.Villageofthenecrofarmer.Features.DefaultBasicCharacterFeatureFeature();
            CloneProperties(clone, aFirstClassParent);
            return clone;
        }
        
        #region property provider interface
        public void setProp(string aProperty, object aValue)
        {
            if ((aProperty == "Age"))
            {
                Age = System.Convert.ToSingle(aValue);
                return;
            }
            if ((aProperty == "Species"))
            {
                Species = System.Convert.ToString(aValue);
                return;
            }
            if ((aProperty == "BornIn"))
            {
                BornIn = System.Convert.ToString(aValue);
                return;
            }
            if ((aProperty == "Sex"))
            {
                Sex = ((Sex)(aValue));
                return;
            }
            if ((aProperty == "Occupation"))
            {
                Occupation = System.Convert.ToString(aValue);
                return;
            }
            if ((aProperty == "Accent"))
            {
                Accent = System.Convert.ToString(aValue);
                return;
            }
            if ((aProperty == "Personality"))
            {
                Personality = System.Convert.ToString(aValue);
                return;
            }
            if ((aProperty == "Appearance"))
            {
                Appearance = System.Convert.ToString(aValue);
                return;
            }
        }
        
        public Articy.Unity.Interfaces.ScriptDataProxy getProp(string aProperty)
        {
            if ((aProperty == "Age"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(Age);
            }
            if ((aProperty == "Species"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(Species);
            }
            if ((aProperty == "BornIn"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(BornIn);
            }
            if ((aProperty == "Sex"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(Sex);
            }
            if ((aProperty == "Occupation"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(Occupation);
            }
            if ((aProperty == "Accent"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(Accent);
            }
            if ((aProperty == "Personality"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(Personality);
            }
            if ((aProperty == "Appearance"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(Appearance);
            }
            return null;
        }
        #endregion
    }
}
